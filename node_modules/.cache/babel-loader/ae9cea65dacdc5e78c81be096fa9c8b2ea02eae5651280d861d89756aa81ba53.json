{"ast":null,"code":"var _jsxFileName = \"/Users/adithimath/Downloads/Innovation Project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Roadmap from './components/Roadmap';\nimport Header from './components/Header';\nimport FinancialSummary from './components/FinancialSummary';\nimport GoalModal from './components/GoalModal';\nimport MilestoneSelector from './components/MilestoneSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedMilestone, setSelectedMilestone] = useState('college');\n  const [goals, setGoals] = useState({\n    college: [{\n      id: 1,\n      title: \"Emergency Fund\",\n      description: \"Save $2,000 for unexpected expenses\",\n      targetAmount: 2000,\n      currentAmount: 800,\n      category: \"emergency\",\n      completed: false\n    }, {\n      id: 2,\n      title: \"Tuition Payment\",\n      description: \"Pay next semester's tuition of $8,000\",\n      targetAmount: 8000,\n      currentAmount: 3200,\n      category: \"tuition\",\n      completed: false\n    }, {\n      id: 3,\n      title: \"401k Contribution\",\n      description: \"Contribute $6,000 to 401k this year\",\n      targetAmount: 6000,\n      currentAmount: 1800,\n      category: \"retirement\",\n      completed: false\n    }, {\n      id: 4,\n      title: \"Graduation Fund\",\n      description: \"Save $5,000 for post-graduation expenses\",\n      targetAmount: 5000,\n      currentAmount: 1200,\n      category: \"graduation\",\n      completed: false\n    }],\n    house: [{\n      id: 5,\n      title: \"Down Payment Fund\",\n      description: \"Save $40,000 for 20% down payment\",\n      targetAmount: 40000,\n      currentAmount: 12000,\n      category: \"downpayment\",\n      completed: false\n    }, {\n      id: 6,\n      title: \"Emergency Fund\",\n      description: \"Build 6-month emergency fund of $15,000\",\n      targetAmount: 15000,\n      currentAmount: 8000,\n      category: \"emergency\",\n      completed: false\n    }, {\n      id: 7,\n      title: \"Closing Costs\",\n      description: \"Save $8,000 for closing costs and fees\",\n      targetAmount: 8000,\n      currentAmount: 3000,\n      category: \"closing\",\n      completed: false\n    }, {\n      id: 8,\n      title: \"Home Maintenance Fund\",\n      description: \"Save $10,000 for home repairs and maintenance\",\n      targetAmount: 10000,\n      currentAmount: 2500,\n      category: \"maintenance\",\n      completed: false\n    }, {\n      id: 9,\n      title: \"Property Tax Fund\",\n      description: \"Save $6,000 for annual property taxes\",\n      targetAmount: 6000,\n      currentAmount: 1800,\n      category: \"taxes\",\n      completed: false\n    }]\n  });\n  const [showModal, setShowModal] = useState(false);\n  const [selectedGoal, setSelectedGoal] = useState(null);\n  const updateGoalProgress = (goalId, newAmount) => {\n    setGoals(prevGoals => ({\n      ...prevGoals,\n      [selectedMilestone]: prevGoals[selectedMilestone].map(goal => goal.id === goalId ? {\n        ...goal,\n        currentAmount: newAmount,\n        completed: newAmount >= goal.targetAmount\n      } : goal)\n    }));\n  };\n  const addGoal = newGoal => {\n    setGoals(prevGoals => ({\n      ...prevGoals,\n      [selectedMilestone]: [...prevGoals[selectedMilestone], {\n        ...newGoal,\n        id: Date.now()\n      }]\n    }));\n  };\n  const openGoalModal = (goal = null) => {\n    setSelectedGoal(goal);\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedGoal(null);\n  };\n  const currentGoals = goals[selectedMilestone] || [];\n  const totalTarget = currentGoals.reduce((sum, goal) => sum + goal.targetAmount, 0);\n  const totalCurrent = currentGoals.reduce((sum, goal) => sum + goal.currentAmount, 0);\n  const overallProgress = totalTarget > 0 ? totalCurrent / totalTarget * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(MilestoneSelector, {\n        selectedMilestone: selectedMilestone,\n        onMilestoneChange: setSelectedMilestone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FinancialSummary, {\n        totalTarget: totalTarget,\n        totalCurrent: totalCurrent,\n        overallProgress: overallProgress,\n        onAddGoal: () => openGoalModal(),\n        milestoneType: selectedMilestone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Roadmap, {\n        goals: currentGoals,\n        onGoalClick: openGoalModal,\n        onUpdateProgress: updateGoalProgress,\n        milestoneType: selectedMilestone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(GoalModal, {\n      goal: selectedGoal,\n      onClose: closeModal,\n      onSave: selectedGoal ? updateGoalProgress : addGoal,\n      milestoneType: selectedMilestone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YLI3OVTWDuo/Mc2qjZ0x7KdHN48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Roadmap","Header","FinancialSummary","GoalModal","MilestoneSelector","jsxDEV","_jsxDEV","App","_s","selectedMilestone","setSelectedMilestone","goals","setGoals","college","id","title","description","targetAmount","currentAmount","category","completed","house","showModal","setShowModal","selectedGoal","setSelectedGoal","updateGoalProgress","goalId","newAmount","prevGoals","map","goal","addGoal","newGoal","Date","now","openGoalModal","closeModal","currentGoals","totalTarget","reduce","sum","totalCurrent","overallProgress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMilestoneChange","onAddGoal","milestoneType","onGoalClick","onUpdateProgress","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/adithimath/Downloads/Innovation Project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Roadmap from './components/Roadmap';\nimport Header from './components/Header';\nimport FinancialSummary from './components/FinancialSummary';\nimport GoalModal from './components/GoalModal';\nimport MilestoneSelector from './components/MilestoneSelector';\n\nfunction App() {\n  const [selectedMilestone, setSelectedMilestone] = useState('college');\n  const [goals, setGoals] = useState({\n    college: [\n      {\n        id: 1,\n        title: \"Emergency Fund\",\n        description: \"Save $2,000 for unexpected expenses\",\n        targetAmount: 2000,\n        currentAmount: 800,\n        category: \"emergency\",\n        completed: false\n      },\n      {\n        id: 2,\n        title: \"Tuition Payment\",\n        description: \"Pay next semester's tuition of $8,000\",\n        targetAmount: 8000,\n        currentAmount: 3200,\n        category: \"tuition\",\n        completed: false\n      },\n      {\n        id: 3,\n        title: \"401k Contribution\",\n        description: \"Contribute $6,000 to 401k this year\",\n        targetAmount: 6000,\n        currentAmount: 1800,\n        category: \"retirement\",\n        completed: false\n      },\n      {\n        id: 4,\n        title: \"Graduation Fund\",\n        description: \"Save $5,000 for post-graduation expenses\",\n        targetAmount: 5000,\n        currentAmount: 1200,\n        category: \"graduation\",\n        completed: false\n      }\n    ],\n    house: [\n      {\n        id: 5,\n        title: \"Down Payment Fund\",\n        description: \"Save $40,000 for 20% down payment\",\n        targetAmount: 40000,\n        currentAmount: 12000,\n        category: \"downpayment\",\n        completed: false\n      },\n      {\n        id: 6,\n        title: \"Emergency Fund\",\n        description: \"Build 6-month emergency fund of $15,000\",\n        targetAmount: 15000,\n        currentAmount: 8000,\n        category: \"emergency\",\n        completed: false\n      },\n      {\n        id: 7,\n        title: \"Closing Costs\",\n        description: \"Save $8,000 for closing costs and fees\",\n        targetAmount: 8000,\n        currentAmount: 3000,\n        category: \"closing\",\n        completed: false\n      },\n      {\n        id: 8,\n        title: \"Home Maintenance Fund\",\n        description: \"Save $10,000 for home repairs and maintenance\",\n        targetAmount: 10000,\n        currentAmount: 2500,\n        category: \"maintenance\",\n        completed: false\n      },\n      {\n        id: 9,\n        title: \"Property Tax Fund\",\n        description: \"Save $6,000 for annual property taxes\",\n        targetAmount: 6000,\n        currentAmount: 1800,\n        category: \"taxes\",\n        completed: false\n      }\n    ]\n  });\n\n  const [showModal, setShowModal] = useState(false);\n  const [selectedGoal, setSelectedGoal] = useState(null);\n\n  const updateGoalProgress = (goalId, newAmount) => {\n    setGoals(prevGoals => ({\n      ...prevGoals,\n      [selectedMilestone]: prevGoals[selectedMilestone].map(goal => \n        goal.id === goalId \n          ? { ...goal, currentAmount: newAmount, completed: newAmount >= goal.targetAmount }\n          : goal\n      )\n    }));\n  };\n\n  const addGoal = (newGoal) => {\n    setGoals(prevGoals => ({\n      ...prevGoals,\n      [selectedMilestone]: [...prevGoals[selectedMilestone], { ...newGoal, id: Date.now() }]\n    }));\n  };\n\n  const openGoalModal = (goal = null) => {\n    setSelectedGoal(goal);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedGoal(null);\n  };\n\n  const currentGoals = goals[selectedMilestone] || [];\n  const totalTarget = currentGoals.reduce((sum, goal) => sum + goal.targetAmount, 0);\n  const totalCurrent = currentGoals.reduce((sum, goal) => sum + goal.currentAmount, 0);\n  const overallProgress = totalTarget > 0 ? (totalCurrent / totalTarget) * 100 : 0;\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"main-content\">\n        <MilestoneSelector \n          selectedMilestone={selectedMilestone}\n          onMilestoneChange={setSelectedMilestone}\n        />\n        <FinancialSummary \n          totalTarget={totalTarget}\n          totalCurrent={totalCurrent}\n          overallProgress={overallProgress}\n          onAddGoal={() => openGoalModal()}\n          milestoneType={selectedMilestone}\n        />\n        <Roadmap \n          goals={currentGoals}\n          onGoalClick={openGoalModal}\n          onUpdateProgress={updateGoalProgress}\n          milestoneType={selectedMilestone}\n        />\n      </div>\n      {showModal && (\n        <GoalModal\n          goal={selectedGoal}\n          onClose={closeModal}\n          onSave={selectedGoal ? updateGoalProgress : addGoal}\n          milestoneType={selectedMilestone}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}